var searchIndex = {};
searchIndex["rust_dns_https"] = {"doc":"Documentation for rust-DNSoverHTTPS.\nWe also have documentation of our fork of\nhttps://github.com/david-cao/dns-parser\nat http://david-cao.github.io/rustdocs/dns_parser/index.html.","items":[[5,"main","rust_dns_https","Bind a UdpSocket for DNS_SERVER.\nListens for DNS packets and sends a response if no errors occur",null,{"inputs":[],"output":null}],[0,"error","","",null,null],[4,"Error","rust_dns_https::error","A rust-dns-https error.",null,null],[13,"PacketBuildErr","","",0,null],[13,"SerdeErr","","",0,null],[13,"InvalidQuestionPacketErr","","",0,null],[13,"UnsupportedResponseType","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"structs","rust_dns_https","",null,null],[3,"APIQuestion","rust_dns_https::structs","",null,null],[12,"name","","",1,null],[12,"question_type","","",1,null],[3,"APIAnswer","","",null,null],[12,"name","","",2,null],[12,"answer_type","","",2,null],[12,"TTL","","",2,null],[12,"data","","",2,null],[3,"APIResponse","","The Main Google Response Struct. Can contain APIQuestions and APIResponses.",null,null],[12,"Status","","",3,null],[12,"TC","","",3,null],[12,"RD","","",3,null],[12,"RA","","",3,null],[12,"AD","","",3,null],[12,"CD","","",3,null],[12,"questions","","",3,null],[12,"answers","","",3,null],[11,"fmt","","",1,{"inputs":[{"name":"apiquestion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize","","",1,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"apianswer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize","","",2,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"write","","",2,{"inputs":[{"name":"apianswer"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"apiresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize","","",3,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[0,"worker","rust_dns_https","",null,null],[5,"build_response","rust_dns_https::worker","Builds a response given a packet, and returns the bytes.",null,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[5,"translate_question","","Translates a DNS question into a Google API Request",null,{"inputs":[{"name":"question"}],"output":{"name":"result"}}],[5,"make_request","","Sends an API request to GOOGLE_IP and parses the\nresult into an APIResponse to return.",null,{"inputs":[{"name":"url"}],"output":{"name":"result"}}],[5,"remove_fqdn_dot","","Workaround for dns_pasrser, this is done since\ndns-parser improperly formats fqdns by removing the trailing dot.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[17,"GOOGLE_IP","","The IP address of dns.google.com",null,null],[17,"DNS_SERVER","rust_dns_https","The IP and Port to run the server on.",null,null]],"paths":[[4,"Error"],[3,"APIQuestion"],[3,"APIAnswer"],[3,"APIResponse"]]};
initSearch(searchIndex);
